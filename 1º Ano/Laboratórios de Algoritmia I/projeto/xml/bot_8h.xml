<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="bot_8h" kind="file" language="C++">
    <compoundname>bot.h</compoundname>
    <includes local="no">bits/types/FILE.h</includes>
    <includedby refid="bot_8c" local="yes">bot.c</includedby>
    <incdepgraph>
      <node id="9">
        <label>bits/types/FILE.h</label>
      </node>
      <node id="8">
        <label>bot.h</label>
        <link refid="bot_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11">
        <label>bot.c</label>
        <link refid="bot_8c"/>
      </node>
      <node id="10">
        <label>bot.h</label>
        <link refid="bot_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structCOORDENADA" prot="public">COORDENADA</innerclass>
    <innerclass refid="structJOGADA" prot="public">JOGADA</innerclass>
    <innerclass refid="structESTADO" prot="public">ESTADO</innerclass>
    <innerclass refid="structTree" prot="public">Tree</innerclass>
    <innerclass refid="structnodo" prot="public">nodo</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="bot_8h_1aba91601f16d4c485b2d9b8c429f27039" prot="public" static="no">
        <name>CASA</name>
        <enumvalue id="bot_8h_1aba91601f16d4c485b2d9b8c429f27039abc711f491a56ec7af7a688be508c5113" prot="public">
          <name>VAZIO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Casa vazia </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="bot_8h_1aba91601f16d4c485b2d9b8c429f27039ad24485fddec75419fd4a0cc9edda0ca5" prot="public">
          <name>BRANCA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Casa branca </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="bot_8h_1aba91601f16d4c485b2d9b8c429f27039a007278eb3827d19891b47cdd3ac8846d" prot="public">
          <name>PRETA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Casa preta </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dados_8h_1aba91601f16d4c485b2d9b8c429f27039abc711f491a56ec7af7a688be508c5113" prot="public">
          <name>VAZIO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Casa vazia </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dados_8h_1aba91601f16d4c485b2d9b8c429f27039ad24485fddec75419fd4a0cc9edda0ca5" prot="public">
          <name>BRANCA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Casa branca </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dados_8h_1aba91601f16d4c485b2d9b8c429f27039a007278eb3827d19891b47cdd3ac8846d" prot="public">
          <name>PRETA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Casa preta </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Tipo de dados para as casas do tabuleiro. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="14" column="1" bodyfile="bot.h" bodystart="14" bodyend="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="bot_8h_1a94c221d29a1760f008b7834093259b7d" prot="public" static="no">
        <type><ref refid="structJOGADA" kindref="compound">JOGADA</ref></type>
        <definition>typedef JOGADA JOGADAS[32]</definition>
        <argsstring>[32]</argsstring>
        <name>JOGADAS</name>
        <briefdescription>
<para>Tipo de dados para as jogadas. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="40" column="1" bodyfile="bot.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="bot_8h_1a24532c506fa8dbf48e8d188f7f991d67" prot="public" static="no">
        <type>struct <ref refid="structTree" kindref="compound">Tree</ref> *</type>
        <definition>typedef struct Tree* arvore</definition>
        <argsstring></argsstring>
        <name>arvore</name>
        <briefdescription>
<para>Definição da estrutura da árvore. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="236" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="bot_8h_1ab74c40cea97ab9b24f68471bb1ded1a2" prot="public" static="no">
        <type>struct <ref refid="structnodo" kindref="compound">nodo</ref></type>
        <definition>typedef struct nodo  NODO</definition>
        <argsstring></argsstring>
        <name>NODO</name>
        <briefdescription>
<para>Definição da lista ligada genérica. </para>        </briefdescription>
        <detaileddescription>
<para>Lista </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="300" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="bot_8h_1a2ed03b19209dd10718380b31b09a69f5" prot="public" static="no">
        <type>struct <ref refid="structnodo" kindref="compound">nodo</ref> *</type>
        <definition>typedef struct nodo * LISTA</definition>
        <argsstring></argsstring>
        <name>LISTA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apontador para um lista </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="300" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="bot_8h_1a7e0c7e26fb685d9ab501e19b05e6954f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
        <definition>ESTADO* inicializar_estado</definition>
        <argsstring>()</argsstring>
        <name>inicializar_estado</name>
        <briefdescription>
<para>Inicializa o valor do estado. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Novo estado </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="68" column="1" bodyfile="bot.c" bodystart="13" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a86da472ab10e0eeb84614f53ef2fa83d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ler</definition>
        <argsstring>(char *ficheiro, ESTADO *e)</argsstring>
        <name>ler</name>
        <param>
          <type>char *</type>
          <declname>ficheiro</declname>
        </param>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>/brief Função que lê um ficheiro <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ficheiro</parametername>
</parameternamelist>
<parameterdescription>
<para>Ficheiro </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o Estado do jogo </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="75" column="1" bodyfile="bot.c" bodystart="31" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a27f56c92e1a658039db8848b1255e1a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gravar</definition>
        <argsstring>(char *ficheiro, ESTADO *e)</argsstring>
        <name>gravar</name>
        <param>
          <type>char *</type>
          <declname>ficheiro</declname>
        </param>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>/brief Função que grava um ficheiro <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ficheiro</parametername>
</parameternamelist>
<parameterdescription>
<para>Ficheiro </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o Estado do jogo </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="82" column="1" bodyfile="bot.c" bodystart="64" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a52f8eb7a7c3f4118a8a7287d00476c1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void movs</definition>
        <argsstring>(FILE *jogo, ESTADO *e)</argsstring>
        <name>movs</name>
        <param>
          <type>FILE *</type>
          <declname>jogo</declname>
        </param>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>/brief Função que mostra os movimentos <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jogo</parametername>
</parameternamelist>
<parameterdescription>
<para>File stream para o output </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o Estado do jogo </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="89" column="1" bodyfile="bot.c" bodystart="77" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a3bbce6c80cbd5b35f09bff9b27dacf6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mostrar_tabuleiro</definition>
        <argsstring>(ESTADO *e, FILE *jogo)</argsstring>
        <name>mostrar_tabuleiro</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>jogo</declname>
        </param>
        <briefdescription>
<para>Função que mostra o tabuleiro atual. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado de jogo </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jogo</parametername>
</parameternamelist>
<parameterdescription>
<para>File stream para o output </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="96" column="1" bodyfile="bot.c" bodystart="572" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1ad103cf5680171f3393581b4559b1686b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void recebelinha</definition>
        <argsstring>(char *linha, int numlinha, ESTADO *e)</argsstring>
        <name>recebelinha</name>
        <param>
          <type>char *</type>
          <declname>linha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numlinha</declname>
        </param>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função que recebe uma linha e guarda no estado de jogo. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>linha</parametername>
</parameternamelist>
<parameterdescription>
<para>Linha </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numlinha</parametername>
</parameternamelist>
<parameterdescription>
<para>Índice da linha </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do jogo </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="104" column="1" bodyfile="bot.c" bodystart="93" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1ab6f7d63be6c1c563b4095b09e4d7d955" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void recebe_jogadas</definition>
        <argsstring>(ESTADO *e, char c, int n)</argsstring>
        <name>recebe_jogadas</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Função que recebe a jogada a ler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do jogo </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coluna </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Linha </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="112" column="1" bodyfile="bot.c" bodystart="107" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1aa07ecdd11cce3fa5b7a247690b179aae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void muda_inc</definition>
        <argsstring>(ESTADO *e, int c)</argsstring>
        <name>muda_inc</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Função que altera o valor do inc. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estadp do jogo </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Inteiro que pode ser um ou dois consoante o jogador atual </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="119" column="1" bodyfile="bot.c" bodystart="127" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1acc6c25533188a99cb69c12e7f2c406ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int obter_jogador_atual</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>obter_jogador_atual</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Obtém o jogador atual. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Jogador atual </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="126" column="1" bodyfile="bot.c" bodystart="134" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1aec4268e4f42612fdf38cae436f01855f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int obter_numero_de_movimentos</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>obter_numero_de_movimentos</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Obtém o número de jogadas. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Número de jogadas </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="133" column="1" bodyfile="bot.c" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a6f1e5d20234aa1a45108e437be964783" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pos</definition>
        <argsstring>(ESTADO *e, int num_mov)</argsstring>
        <name>pos</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_mov</declname>
        </param>
        <briefdescription>
<para>Função que altera número da jogada atual. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do jogo </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_mov</parametername>
</parameternamelist>
<parameterdescription>
<para>Número do movimento para onde se altera a jogada atual </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="140" column="1" bodyfile="bot.c" bodystart="144" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a0429550be6d7690e2ee9c43084968953" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jogada_existe</definition>
        <argsstring>(ESTADO *e, int i, int p)</argsstring>
        <name>jogada_existe</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Função que retorna coordenadas. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do jogo </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Número da jogada </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Jogador atual </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 - Jogada não existe<linebreak/>
 1 - Jogada existe </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="149" column="1" bodyfile="bot.c" bodystart="163" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a3a66b7cad1e94cf6be91184a33be627d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* obter_jogada</definition>
        <argsstring>(ESTADO *e, int i, int p)</argsstring>
        <name>obter_jogada</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Função que retorna a jogada a imprimir. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do jogo </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Número da jogada </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Jogador atual </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String com a jogada </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="158" column="1" bodyfile="bot.c" bodystart="175" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a32ced9c7ca77445bebb4ea50477c4642" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reset_tab</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>reset_tab</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função que dá reset ao tabuleiro. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do jogo </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="164" column="1" bodyfile="bot.c" bodystart="187" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1ac313d7e553b1e2b5f266acb9bfff8141" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jogar</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>jogar</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Função que recebe uma coordenada e joga quando é válida. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do jogo </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada da jogada </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 - Jogada Válida <linebreak/>
 0 - Jogada Inválida </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="172" column="1" bodyfile="bot.c" bodystart="200" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a5ad4c3875eac9182567f7f0a538d5ddf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mudar_casa</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>mudar_casa</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Muda o valor de uma casa. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="179" column="1" bodyfile="bot.c" bodystart="213" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a0529070ac50c4b58c7c2cee1cfff8c28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int casa_esta_livre</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>casa_esta_livre</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Verifica se uam certa casa está livre. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 - Casa não pode ser jogada <linebreak/>
 1 - Casa pode ser jogada </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="187" column="1" bodyfile="bot.c" bodystart="234" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a9b08ade4b8ead18f34cf3b1e808de712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void muda_jogador</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>muda_jogador</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Muda o jogador. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="193" column="1" bodyfile="bot.c" bodystart="248" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1aeb69a0d9c0cc5412f2f673bbfed975a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add_jogada</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>add_jogada</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função que adiciona 1 ao número de jogadas. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do jogo </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="199" column="1" bodyfile="bot.c" bodystart="257" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a75a3c6feb2f2ec713f96559558b136d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jog2</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>jog2</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>/brief Função que joga pelo jogador <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o Estado do jogo </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="205" column="1" bodyfile="bot.c" bodystart="264" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a40555aff97afc67bd1866f2785111310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
        <definition>COORDENADA obter_ultima_jogada</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>obter_ultima_jogada</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Devolve a última jogada. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do jogo </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Coordenada da última jogada </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="212" column="1" bodyfile="bot.c" bodystart="305" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a9946aa4fcc3bb50874673103b31eca48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int obter_linha</definition>
        <argsstring>(COORDENADA c)</argsstring>
        <name>obter_linha</name>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Devolve a linha da coordenada dada. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Linha de coordenada dada </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="219" column="1" bodyfile="bot.c" bodystart="309" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1ab495ce88ee9837a7f7f67b9358659f16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int obter_coluna</definition>
        <argsstring>(COORDENADA c)</argsstring>
        <name>obter_coluna</name>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Devolve a coluna da coordenada dada. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Coluna da coordenada dada </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="226" column="1" bodyfile="bot.c" bodystart="313" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a8bf0b34bd37e32823d5781688f5646e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bot_8h_1a24532c506fa8dbf48e8d188f7f991d67" kindref="member">arvore</ref></type>
        <definition>arvore inicializa_arvore</definition>
        <argsstring>(ESTADO *e, COORDENADA c, int jog)</argsstring>
        <name>inicializa_arvore</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jog</declname>
        </param>
        <briefdescription>
<para>Função que inicializa uma lista. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do jogo </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada da última jogada </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Lista das jogadas </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="244" column="1" bodyfile="bot.c" bodystart="317" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a4cead19a79190663454d2f9ebada82fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Minimax</definition>
        <argsstring>(int altura, COORDENADA c, ESTADO *e, int jog)</argsstring>
        <name>Minimax</name>
        <param>
          <type>int</type>
          <declname>altura</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jog</declname>
        </param>
        <briefdescription>
<para>Função que implementa o algoritmo minimax. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>altura</parametername>
</parameternamelist>
<parameterdescription>
<para>Comprimemto da lista </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada da última jogada </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado de jogo </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Valor da jogada </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="253" column="1" bodyfile="bot.c" bodystart="386" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a9be064cca25e77be78017233c66e1ec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float valor_jogada</definition>
        <argsstring>(COORDENADA c, ESTADO *e, int jogador)</argsstring>
        <name>valor_jogada</name>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jogador</declname>
        </param>
        <briefdescription>
<para>Função que determina o valor de uma jogada. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada da última jogada </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado de jogo </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jogador</parametername>
</parameternamelist>
<parameterdescription>
<para>Jogador 1 ou 2 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>valor que uma jogada tem </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="262" column="1" bodyfile="bot.c" bodystart="414" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a0ac0a14f4a34c1290f81a4a17e041df6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gameOver</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>gameOver</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Função que determina se o jogo foi ganho. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontado para o estado do jogo </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada da última jogada </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 - Jogo não acabou <linebreak/>
 1 - Vitória do jogador 1 <linebreak/>
 2 - Vitória do jogador 2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="270" column="1" bodyfile="bot.c" bodystart="426" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a9dfbc982d23a619e36575d8e7ec8e41c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jog</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>jog</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>/brief Função que joga pelo jogador <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o Estado do jogo </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="276" column="1" bodyfile="bot.c" bodystart="441" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1ac3accda3cbe3bb04f9ed7f4d77aac595" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void retirar_ultima_jogada</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>retirar_ultima_jogada</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função que retira a última jogada. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estadp do jogo </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="282" column="1" bodyfile="bot.c" bodystart="477" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1aef5216319c153ec749f1d30fe32cbdb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
        <definition>COORDENADA cria_coordenada</definition>
        <argsstring>(int linha, int coluna)</argsstring>
        <name>cria_coordenada</name>
        <param>
          <type>int</type>
          <declname>linha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>coluna</declname>
        </param>
        <briefdescription>
<para>Cria uma coordenada com a linha e a coluna dados. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>linha</parametername>
</parameternamelist>
<parameterdescription>
<para>Linha </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coluna</parametername>
</parameternamelist>
<parameterdescription>
<para>Coluna </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Coordenada com a linha e coluna dados </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="290" column="1" bodyfile="bot.c" bodystart="496" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1ae3b99323b6f8f35d80bb69ff1a27985e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bot_8h_1a2ed03b19209dd10718380b31b09a69f5" kindref="member">LISTA</ref></type>
        <definition>LISTA criar_lista</definition>
        <argsstring>()</argsstring>
        <name>criar_lista</name>
        <briefdescription>
<para>Função que cria um lista ligada. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Apontador para a lista ligada </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="306" column="1" bodyfile="bot.c" bodystart="503" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a6ec793087950b61f792d8e184bf04d9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bot_8h_1a2ed03b19209dd10718380b31b09a69f5" kindref="member">LISTA</ref></type>
        <definition>LISTA insere_cabeca</definition>
        <argsstring>(LISTA l, void *valor)</argsstring>
        <name>insere_cabeca</name>
        <param>
          <type><ref refid="bot_8h_1a2ed03b19209dd10718380b31b09a69f5" kindref="member">LISTA</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>valor</declname>
        </param>
        <briefdescription>
<para>Função que insere um valor à cabeça. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista ligada </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valor</parametername>
</parameternamelist>
<parameterdescription>
<para>Valor a ser adicionado </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Apontador para a lista ligada </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="314" column="1" bodyfile="bot.c" bodystart="510" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1af90a7ac214fd566bfb7288d744c94185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* devolve_cabeca</definition>
        <argsstring>(LISTA l)</argsstring>
        <name>devolve_cabeca</name>
        <param>
          <type><ref refid="bot_8h_1a2ed03b19209dd10718380b31b09a69f5" kindref="member">LISTA</ref></type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Função que devolve a cabeça da lista. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista ligada </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Valor guardado na cabeça </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="321" column="1" bodyfile="bot.c" bodystart="522" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1affb39e37aef63ab00b6df8f9336f6673" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bot_8h_1a2ed03b19209dd10718380b31b09a69f5" kindref="member">LISTA</ref></type>
        <definition>LISTA proximo</definition>
        <argsstring>(LISTA l)</argsstring>
        <name>proximo</name>
        <param>
          <type><ref refid="bot_8h_1a2ed03b19209dd10718380b31b09a69f5" kindref="member">LISTA</ref></type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Função que devolve o próximo valor da lista. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista ligada </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Lista que começa no elemento seguinte da lista dada </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="328" column="1" bodyfile="bot.c" bodystart="526" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a9026a681a68322b5ec7f07137b864cbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bot_8h_1a2ed03b19209dd10718380b31b09a69f5" kindref="member">LISTA</ref></type>
        <definition>LISTA remove_cabeca</definition>
        <argsstring>(LISTA L)</argsstring>
        <name>remove_cabeca</name>
        <param>
          <type><ref refid="bot_8h_1a2ed03b19209dd10718380b31b09a69f5" kindref="member">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
<para>Função que remove a cabeça da lista. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista ligada </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Cauda da lista ligada </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="335" column="1" bodyfile="bot.c" bodystart="530" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a4c10928f7acaa4e3de3760cea0dfd9c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lista_esta_vazia</definition>
        <argsstring>(LISTA L)</argsstring>
        <name>lista_esta_vazia</name>
        <param>
          <type><ref refid="bot_8h_1a2ed03b19209dd10718380b31b09a69f5" kindref="member">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
<para>Função que verifica se a lista está vazia. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista ligada </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 - Lista está vazia |n 0 - Lista não está vazia </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="342" column="1" bodyfile="bot.c" bodystart="536" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1af8bf408a57722e47483ef6777e92d49c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bot_8h_1a2ed03b19209dd10718380b31b09a69f5" kindref="member">LISTA</ref></type>
        <definition>LISTA potenciais_jogadas</definition>
        <argsstring>(ESTADO *e, LISTA l)</argsstring>
        <name>potenciais_jogadas</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="bot_8h_1a2ed03b19209dd10718380b31b09a69f5" kindref="member">LISTA</ref></type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Função que ve as jogadas possiveis. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado de jogo </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Uma lista </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Lista com as potenciais jogadas </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="350" column="1" bodyfile="bot.c" bodystart="542" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a587aa5bfe9c3f95a078781fc230784ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float distancia</definition>
        <argsstring>(COORDENADA a, COORDENADA b)</argsstring>
        <name>distancia</name>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Função que calcula a distancia. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Distância entre duas casas do tabuleiro </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="358" column="1" bodyfile="bot.c" bodystart="564" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="bot_8h_1a59f6510397fb84dd6b96f6214f7f1d55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bot_8h_1aba91601f16d4c485b2d9b8c429f27039" kindref="member">CASA</ref></type>
        <definition>CASA obter_casa</definition>
        <argsstring>(ESTADO *e, int linha, int coluna)</argsstring>
        <name>obter_casa</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>linha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>coluna</declname>
        </param>
        <briefdescription>
<para>Devolve o valor de uma casa. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Linha</parametername>
</parameternamelist>
<parameterdescription>
<para>Linha da jogada </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Coluna</parametername>
</parameternamelist>
<parameterdescription>
<para>Coluna da jogada </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Valor da casa </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot.h" line="367" column="1" bodyfile="bot.c" bodystart="586" bodyend="588"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Definição do estado e das funções que o manipulam </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>BOT_BOT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOT_BOT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bits/types/FILE.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="bot_8h_1aba91601f16d4c485b2d9b8c429f27039" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/><ref refid="bot_8h_1aba91601f16d4c485b2d9b8c429f27039abc711f491a56ec7af7a688be508c5113" kindref="member">VAZIO</ref>,<sp/><ref refid="bot_8h_1aba91601f16d4c485b2d9b8c429f27039ad24485fddec75419fd4a0cc9edda0ca5" kindref="member">BRANCA</ref>,<sp/><ref refid="bot_8h_1aba91601f16d4c485b2d9b8c429f27039a007278eb3827d19891b47cdd3ac8846d" kindref="member">PRETA</ref>}<sp/><ref refid="bot_8h_1aba91601f16d4c485b2d9b8c429f27039" kindref="member">CASA</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="structCOORDENADA" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="23" refid="structCOORDENADA_1adfbc8d4856ce807139fdf62e00aed29a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structCOORDENADA_1adfbc8d4856ce807139fdf62e00aed29a" kindref="member">coluna</ref>;</highlight></codeline>
<codeline lineno="24" refid="structCOORDENADA_1aefe14bcc5a066ac3b21500cc3d28c06f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structCOORDENADA_1aefe14bcc5a066ac3b21500cc3d28c06f" kindref="member">linha</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structJOGADA" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="32" refid="structJOGADA_1a93d9306cb0c49b66b7d9a615bffe0149" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/><ref refid="structJOGADA_1a93d9306cb0c49b66b7d9a615bffe0149" kindref="member">jogador1</ref>;</highlight></codeline>
<codeline lineno="34" refid="structJOGADA_1ab46b16dfbdc7f2af9430c8dcdac0914b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/><ref refid="structJOGADA_1ab46b16dfbdc7f2af9430c8dcdac0914b" kindref="member">jogador2</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}<sp/><ref refid="structJOGADA" kindref="compound">JOGADA</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="bot_8h_1a94c221d29a1760f008b7834093259b7d" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structJOGADA" kindref="compound">JOGADA</ref><sp/><ref refid="bot_8h_1a94c221d29a1760f008b7834093259b7d" kindref="member">JOGADAS</ref>[32];</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="structESTADO" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47" refid="structESTADO_1ae03c399b73d7a92d7f7ced83e91e5b6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bot_8h_1aba91601f16d4c485b2d9b8c429f27039" kindref="member">CASA</ref><sp/>tab[8][8];</highlight></codeline>
<codeline lineno="49" refid="structESTADO_1a4896a5c5c1f40b43fb795623327e3f47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/><ref refid="structESTADO_1a4896a5c5c1f40b43fb795623327e3f47" kindref="member">ultima_jogada</ref>;</highlight></codeline>
<codeline lineno="51" refid="structESTADO_1afae43b87a488fad0f2b56a18bad31d18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bot_8h_1a94c221d29a1760f008b7834093259b7d" kindref="member">JOGADAS</ref><sp/><ref refid="structESTADO_1afae43b87a488fad0f2b56a18bad31d18" kindref="member">jogadas</ref>;</highlight></codeline>
<codeline lineno="53" refid="structESTADO_1a261495728744647e618b4e623f5a4b7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structESTADO_1a261495728744647e618b4e623f5a4b7a" kindref="member">num_jogadas</ref>;</highlight></codeline>
<codeline lineno="55" refid="structESTADO_1a5dd28e2e68b7aef2b6b7ea88e02eff58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structESTADO_1a5dd28e2e68b7aef2b6b7ea88e02eff58" kindref="member">jogador_atual</ref>;</highlight></codeline>
<codeline lineno="57" refid="structESTADO_1abe6faacdd6111160bf9a354f44b95b38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structESTADO_1abe6faacdd6111160bf9a354f44b95b38" kindref="member">num_comandos</ref>;</highlight></codeline>
<codeline lineno="59" refid="structESTADO_1a2a04cf6054f85e3dbee5fb8cc08e7264" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structESTADO_1a2a04cf6054f85e3dbee5fb8cc08e7264" kindref="member">num_movimento</ref>;</highlight></codeline>
<codeline lineno="61" refid="structESTADO_1a5ecb2febdc1bc87fcd87fdb22fffd237" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structESTADO_1a5ecb2febdc1bc87fcd87fdb22fffd237" kindref="member">inc</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}<sp/><ref refid="structESTADO" kindref="compound">ESTADO</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*<ref refid="bot_8h_1a7e0c7e26fb685d9ab501e19b05e6954f" kindref="member">inicializar_estado</ref>();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1a86da472ab10e0eeb84614f53ef2fa83d" kindref="member">ler</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ficheiro,<sp/><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1a27f56c92e1a658039db8848b1255e1a9" kindref="member">gravar</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ficheiro,<sp/><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1a52f8eb7a7c3f4118a8a7287d00476c1c" kindref="member">movs</ref><sp/>(FILE<sp/>*jogo,<sp/><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1a3bbce6c80cbd5b35f09bff9b27dacf6c" kindref="member">mostrar_tabuleiro</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/>FILE<sp/>*jogo);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1ad103cf5680171f3393581b4559b1686b" kindref="member">recebelinha</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*linha,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numlinha,<sp/><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1ab6f7d63be6c1c563b4095b09e4d7d955" kindref="member">recebe_jogadas</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1aa07ecdd11cce3fa5b7a247690b179aae" kindref="member">muda_inc</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1acc6c25533188a99cb69c12e7f2c406ef" kindref="member">obter_jogador_atual</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1aec4268e4f42612fdf38cae436f01855f" kindref="member">obter_numero_de_movimentos</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1a6f1e5d20234aa1a45108e437be964783" kindref="member">pos</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_mov);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1a0429550be6d7690e2ee9c43084968953" kindref="member">jogada_existe</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="bot_8h_1a3a66b7cad1e94cf6be91184a33be627d" kindref="member">obter_jogada</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1a32ced9c7ca77445bebb4ea50477c4642" kindref="member">reset_tab</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1ac313d7e553b1e2b5f266acb9bfff8141" kindref="member">jogar</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1a5ad4c3875eac9182567f7f0a538d5ddf" kindref="member">mudar_casa</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1a0529070ac50c4b58c7c2cee1cfff8c28" kindref="member">casa_esta_livre</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1a9b08ade4b8ead18f34cf3b1e808de712" kindref="member">muda_jogador</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1aeb69a0d9c0cc5412f2f673bbfed975a5" kindref="member">add_jogada</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1a75a3c6feb2f2ec713f96559558b136d0" kindref="member">jog2</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/><ref refid="bot_8h_1a40555aff97afc67bd1866f2785111310" kindref="member">obter_ultima_jogada</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1a9946aa4fcc3bb50874673103b31eca48" kindref="member">obter_linha</ref>(<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1ab495ce88ee9837a7f7f67b9358659f16" kindref="member">obter_coluna</ref>(<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="structTree" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structTree" kindref="compound">Tree</ref>{</highlight></codeline>
<codeline lineno="233" refid="structTree_1abc891f05ffdda2289c85cf805b12ab64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/><ref refid="structTree_1abc891f05ffdda2289c85cf805b12ab64" kindref="member">nodo</ref>;</highlight></codeline>
<codeline lineno="235" refid="structTree_1a47973c3f53684bf12072870d6b5239fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>*<ref refid="structTree_1a47973c3f53684bf12072870d6b5239fb" kindref="member">proximo</ref>[8];</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}*<ref refid="bot_8h_1a24532c506fa8dbf48e8d188f7f991d67" kindref="member">arvore</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><ref refid="structTree" kindref="compound">arvore</ref><sp/><ref refid="bot_8h_1a8bf0b34bd37e32823d5781688f5646e5" kindref="member">inicializa_arvore</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1a9dfbc982d23a619e36575d8e7ec8e41c" kindref="member">jog</ref>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1a4cead19a79190663454d2f9ebada82fa" kindref="member">Minimax</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>altura,<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c,<sp/><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1a9dfbc982d23a619e36575d8e7ec8e41c" kindref="member">jog</ref>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1a9be064cca25e77be78017233c66e1ec9" kindref="member">valor_jogada</ref>(<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c,<sp/><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jogador);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1a0ac0a14f4a34c1290f81a4a17e041df6" kindref="member">gameOver</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1a9dfbc982d23a619e36575d8e7ec8e41c" kindref="member">jog</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1ac3accda3cbe3bb04f9ed7f4d77aac595" kindref="member">retirar_ultima_jogada</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/><ref refid="bot_8h_1aef5216319c153ec749f1d30fe32cbdb4" kindref="member">cria_coordenada</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linha,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coluna);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="structnodo" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnodo" kindref="compound">nodo</ref><sp/>{</highlight></codeline>
<codeline lineno="297" refid="structnodo_1a344b5b1cb9597ce38786e9d21bb6f42d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structnodo_1a344b5b1cb9597ce38786e9d21bb6f42d" kindref="member">valor</ref>;</highlight></codeline>
<codeline lineno="299" refid="structnodo_1a89841e92650be541e8bc568a20765e82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnodo" kindref="compound">nodo</ref><sp/>*<ref refid="structnodo_1a89841e92650be541e8bc568a20765e82" kindref="member">proximo</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}<sp/><sp/><ref refid="bot_8h_1ab74c40cea97ab9b24f68471bb1ded1a2" kindref="member">NODO</ref>,<sp/><sp/>*<ref refid="bot_8h_1a2ed03b19209dd10718380b31b09a69f5" kindref="member">LISTA</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal">LISTA<sp/><ref refid="bot_8h_1ae3b99323b6f8f35d80bb69ff1a27985e" kindref="member">criar_lista</ref>();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal">LISTA<sp/><ref refid="bot_8h_1a6ec793087950b61f792d8e184bf04d9d" kindref="member">insere_cabeca</ref>(LISTA<sp/>l,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structnodo_1a344b5b1cb9597ce38786e9d21bb6f42d" kindref="member">valor</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="bot_8h_1af90a7ac214fd566bfb7288d744c94185" kindref="member">devolve_cabeca</ref>(LISTA<sp/>l);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal">LISTA<sp/><ref refid="structTree_1a47973c3f53684bf12072870d6b5239fb" kindref="member">proximo</ref>(LISTA<sp/>l);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal">LISTA<sp/><ref refid="bot_8h_1a9026a681a68322b5ec7f07137b864cbd" kindref="member">remove_cabeca</ref>(LISTA<sp/>L);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1a4c10928f7acaa4e3de3760cea0dfd9c0" kindref="member">lista_esta_vazia</ref>(LISTA<sp/>L);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal">LISTA<sp/><ref refid="bot_8h_1af8bf408a57722e47483ef6777e92d49c" kindref="member">potenciais_jogadas</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/>LISTA<sp/>l);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1a587aa5bfe9c3f95a078781fc230784ef" kindref="member">distancia</ref>(<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>a,<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>b);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><ref refid="bot_8h_1aba91601f16d4c485b2d9b8c429f27039" kindref="member">CASA</ref><sp/><ref refid="bot_8h_1a59f6510397fb84dd6b96f6214f7f1d55" kindref="member">obter_casa</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linha,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coluna);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//BOT_BOT_H</highlight></codeline>
    </programlisting>
    <location file="bot.h"/>
  </compounddef>
</doxygen>
